/*
 * main.c
 *
 *	Description : Fan control system , controls speed of a fan using
 *	a temperature sensor and displays the current temperature and fan state
 *	on an LCD
 *
 *  Created on: Oct 13, 2023
 *      Author: Mark
 */
#include "pwm.h"
#include "lm35_sensor.h"
#include "my_lcd.h"
#include "adc.h"
#include "motor.h"
#include<util/delay.h>

/*************************************************************************
 *                            DEFINITIONS                                *
 *************************************************************************/
#define FAN_ON 1
#define FAN_OFF 0




/*************************************************************************
 *                         GLOBAL VARIABLES                              *
 *************************************************************************/

uint8 fanCurrentState=FAN_OFF;






/*************************************************************************
 *                         FUNCTIONS DEFINITIONS                         *
 *************************************************************************/

/*
 * This Function controls the speed of the fan based on the current
 * temperature.
 *  a. If the temperature is less than 30C turn off the fan.
 *  b. If the temperature is greater than or equal 30C turn on the fan with 25% of its maximum speed.
 *  c. If the temperature is greater than or equal 60C turn on the fan with 50% of its maximum speed.
 *  d. If the temperature is greater than or equal 90C turn on the fan with 75% of its maximum speed.
 *  e. If the temperature is greater than or equal 120C turn on the fan with 100% of its maximum speed.
 */
void fanControl(uint8 temp){
	if(temp<30){
		DcMotor_Rotate(MOTOR_STOP,0);
		fanCurrentState=FAN_OFF;
	}
	else if(temp>=30 && temp<60){
		DcMotor_Rotate(MOTOR_CLOCKWISE,25);
		fanCurrentState=FAN_ON;
	}
	else if(temp>=60 && temp<90){
		DcMotor_Rotate(MOTOR_CLOCKWISE,50);
		fanCurrentState=FAN_ON;
	}
	else if(temp>=90 && temp<120){
		DcMotor_Rotate(MOTOR_CLOCKWISE,75);
		fanCurrentState=FAN_ON;
	}
	else if(temp>=120){
		DcMotor_Rotate(MOTOR_CLOCKWISE,100);
		fanCurrentState=FAN_ON;
	}
}

/*************************************************************************
 *                         MAIN FUNCTION                                 *
 *************************************************************************/


int main(void){
	/*create adc config struct to setup adc with internal reference voltage
	 * and prescaler Fcpu/8 */
	ADC_ConfigType adc_config={ADC_INTERNAL_REF,ADC_DIV_8};
	LCD_init();/*initialize lcd*/
	/*move cursor to the 4th column to display the fan state line */
	LCD_moveCursor(0,4);
	/*display the fan state line*/
	LCD_displayString("Fan is ");
	/*move cursor to the 3rd column in the second row to display the temp line*/
	LCD_moveCursor(1,3);
	/*display the temperature line*/
	LCD_displayString("Temp =     c");
	/*initialize adc with the config created*/
	ADC_init(&adc_config);
	/*initialize motor*/
	DcMotor_init();
	uint8 temp=0;/*variable to hold the temperature value */
	while(1){

		LCD_moveCursor(0,11);
		if(fanCurrentState==FAN_OFF){
			LCD_displayString("off");
		}
		else if(fanCurrentState==FAN_ON){
			LCD_displayString("on");
			LCD_displayChar(' ');
		}
		LCD_moveCursor(1,10);
		if(temp>=100){
			LCD_integerToString(temp);

		}
		else{
			LCD_integerToString(temp);
			LCD_displayChar(' ');
		}
		temp=LM35_getTemperature();
		fanControl(temp);

	}
}

